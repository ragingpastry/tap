---
generate_release:
  before_script:
    - apk add curl ca-certificates
    - cp /etc/gitlab-runner/certs/ca.crt /usr/local/share/ca-certificates/ca.crt
    - update-ca-certificates
  script:
    - semantic-release

upload_package:
  stage: upload
  image: curlimages/curl:latest
  script: |
    VERSION=$(cat VERSION)
    # curl -k --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "${WIN_X64_BINARY}" "${PACKAGE_REGISTRY_URL_PREFIX}/${VERSION}/${WIN_X64_BINARY}"
    # curl -k --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "${WIN_X64_BINARY}.sha256" "${PACKAGE_REGISTRY_URL_PREFIX}/${VERSION}/${WIN_X64_BINARY}.sha256"
    curl -k --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "${LINUX_AMD64_BINARY}" "${PACKAGE_REGISTRY_URL_PREFIX}/${VERSION}/${LINUX_AMD64_BINARY}"
    curl -k --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "${LINUX_AMD64_BINARY}.sha256" "${PACKAGE_REGISTRY_URL_PREFIX}/${VERSION}/${LINUX_AMD64_BINARY}.sha256"
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /^chore\(release\)/ && $CI_COMMIT_TAG != null'
      when: always

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /^chore\(release\)/ && $CI_COMMIT_TAG != null'
      when: always
  script:
    - |
      VERSION=$(cat VERSION)
      release-cli --insecure-https create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${LINUX_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL_PREFIX}/${VERSION}/${LINUX_AMD64_BINARY}\"}" \
        --assets-link "{\"name\":\"${LINUX_AMD64_BINARY}.sha256\",\"url\":\"${PACKAGE_REGISTRY_URL_PREFIX}/${VERSION}/${LINUX_AMD64_BINARY}.sha256\"}" \
  artifacts:
    paths:
      - artifacts/*.html
      - artifacts/*.xml
