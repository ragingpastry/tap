---
variables:
  LINUX_AMD64_BINARY: "tap-linux-amd64"
  WIN_X64_BINARY: "tap-win64.exe"
  PACKAGE_REGISTRY_URL_PREFIX: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/tap"

include:
  - remote: https://gitlab.com/dreamer-labs/repoman/gitlab-ci-templates/-/raw/master/.gitlab-ci-commitchecker.yml
  - remote: https://gitlab.com/dreamer-labs/repoman/gitlab-ci-templates/-/raw/master/.gitlab-ci-generate-release.yml
  - .gitlab-ci-functional-test.yml
  - .gitlab-ci-release.yml

stages:
  - lint
  - build
  - functionaltest
  - combinetests
  - generate_release
  - upload
  - prep_release
  - release

nimlint:
  image: ubuntu:20.04
  stage: lint
  only:
    - merge_requests
    - master
  before_script:
    - apt update && apt install -y gcc xz-utils curl
    - (curl https://nim-lang.org/choosenim/init.sh -sSf > /tmp/init.sh; sh /tmp/init.sh -y; rm /tmp/init.sh)
  script: |
    for file in $(find . -type f -name "*.nim"); do
      /root/.nimble/bin/nimpretty --out:/tmp/$file $file && diff /tmp/$file $file;
      if [[ $? -ne 0 ]]; then
        echo "Lint violation found... Exiting"
        exit 1
      fi
    done

nimbuild-linux:
  image: nimlang/nim:latest
  stage: build
  only:
    - merge_requests
    - master
  script: |
    apt update && apt install -y musl-tools curl make
    nimble muslbuild
    mv bin/tap ${LINUX_AMD64_BINARY}
    sha256sum ${LINUX_AMD64_BINARY} > ${LINUX_AMD64_BINARY}.sha256
  artifacts:
    paths:
      - ${LINUX_AMD64_BINARY}
      - ${LINUX_AMD64_BINARY}.sha256

# Windows + statically linked binary + openssl = what?
# nimbuild-windows:
#   image: nimlang/nim:latest
#   stage: build
#   script: |
#     apt update && apt install mingw-w64 -y
#     nimble --accept build -d:mingw -d:release -d:ssl
#     mv bin/tap.exe ${WIN_X64_BINARY}
#     sha256sum ${WIN_X64_BINARY} > ${WIN_X64_BINARY}.sha256
#   artifacts:
#     paths:
#       - ${WIN_X64_BINARY}
#       - ${WIN_X64_BINARY}.sha256

commitchecker:
  before_script:
    - apk add curl ca-certificates
    - cp /etc/gitlab-runner/certs/ca.crt /usr/local/share/ca-certificates/ca.crt
    - update-ca-certificates
